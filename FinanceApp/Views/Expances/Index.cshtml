@{
    ViewData["Title"] = "My Expenses";
}
@model IEnumerable<FinanceApp.Models.Expances>

<h2 class="text-center"> My Expenses</h2>

<div class= "container">
    <table class="table table-bordered" >
        <thead class="table-light">
            <tr>
                <th>Description</th>
                <th>Amount</th>
                <th>Category</th>
                <th>Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var item in Model)
            {
                <tr>
                    <td>@item.Description</td>
                    <td>@item.Amount $</td>
                    <td>@item.Category</td>
                    <td>@item.Date.ToString("yyyy-MM-dd")</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<h2 class="text-center">Expenses Overview</h2>

<div class="align-content-center">
    <canvas style="max-width: 450px; max-height: 450px;" id="myChart"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    const ctx = document.getElementById('myChart');
    fetch('/Expances/GetChart')
        .then(response => response.json())
        .then(data => {
            new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: data.map(d=> d.category),
                    datasets: [{ 
                        data:  data.map(d => d.total),
                         
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        })
    
</script>